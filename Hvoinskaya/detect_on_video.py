# -*- coding: utf-8 -*-
"""Detect on video.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FD56wU5RB8w3FRxtG8f_YfFUYJyd7VaG
"""

from google.colab import drive
drive.mount('/content/drive')

import os
import shutil
import zipfile
from sklearn.model_selection import train_test_split

import zipfile
def unzip(source_filename, dest_dir):
  with zipfile.ZipFile(source_filename) as zf:
    zf.extractall(dest_dir)

def zip_folder(folder_path, output_filename):
  """
  Compresses the specified folder into a zip file.

  Args:
    folder_path: Path to the folder to be zipped.
    output_filename: Name of the output zip file.
  """
  shutil.make_archive(output_filename, 'zip', folder_path)
  print(f"Folder '{folder_path}' zipped to '{output_filename}.zip'")

# Укажите путь к архиву .zip на Google Диске
zip_path = '/content/drive/MyDrive/weights_0409.zip'

# Укажите путь для распаковки архива
extract_path = '/content'

# Распаковка архива
unzip(zip_path, extract_path)

!pip install ultralytics

import cv2
from ultralytics import YOLO
from google.colab.patches import cv2_imshow

# Загрузка модели YOLOv8
model = YOLO('/content/weights_0409/best.pt')
# Открытие видеофайла
video_capture = cv2.VideoCapture("/content/drive/MyDrive/WhatsApp Video 2024-06-15 at 08.54.44.mp4")
# Получение информации о видео
frame_width = int(video_capture.get(cv2.CAP_PROP_FRAME_WIDTH))
frame_height = int(video_capture.get(cv2.CAP_PROP_FRAME_HEIGHT))
fps = video_capture.get(cv2.CAP_PROP_FPS)
print( frame_width)
print(frame_height)
print(fps)

# Создание видео-файла для записи
output_video = cv2.VideoWriter('/content/drive/MyDrive/video/output.mp4',
                            cv2.VideoWriter_fourcc(*'mp4v'),
                            fps,
                            (640, 640))

while video_capture.isOpened():
    # Чтение кадра из видео
    success, frame = video_capture.read()
    if not success:
        break

    frame = cv2.resize(frame, (640, 640))

    # Детекция объектов
    results = model(frame)

    # Визуализация результатов на кадре
    annotated_frame = results[0].plot()

    #cv2_imshow( annotated_frame )


    # Запись обработанного кадра в выходной видеофайл
    output_video.write(annotated_frame)


# Освободить захват и закрыть окно
video_capture.release()
output_video.release()
cv2.destroyAllWindows()

from moviepy.editor import VideoFileClip

video = VideoFileClip('/content/drive/MyDrive/video/output.mp4')
video.ipython_display(width=500, center=False)

"""**Тестирование на видеофайле с трекингом**"""

# Загрузка модели YOLOv8
model = YOLO('/content/weights_0409/best.pt')
# Открытие видеофайла
video_capture = cv2.VideoCapture("/content/drive/MyDrive/WhatsApp Video 2024-06-15 at 08.54.44.mp4")
# Получение информации о видео

fps = video_capture.get(cv2.CAP_PROP_FPS)



# Создание видео-файла для записи
output_video = cv2.VideoWriter('/content/drive/MyDrive/video/output_track.mp4',
                            cv2.VideoWriter_fourcc(*'mp4v'),
                            fps,
                            (640, 640))

while video_capture.isOpened():
    # Чтение кадра из видео
    success, frame = video_capture.read()
    if not success:
        break

    frame = cv2.resize(frame, (640, 640))

    # Run YOLOv8 tracking on the frame, persisting tracks between frames
    results = model.track(frame, persist=True)

    # Визуализация результатов на кадре
    annotated_frame = results[0].plot()

    #cv2_imshow( annotated_frame )

    #Запись обработанного кадра в выходной видеофайл
    output_video.write(annotated_frame)


# Освободить захват и закрыть окно
video_capture.release()
output_video.release()
cv2.destroyAllWindows()

from moviepy.editor import VideoFileClip

video = VideoFileClip('/content/drive/MyDrive/video/output_track.mp4')
video.ipython_display(width=500, center=False)

"""**Тестирование модели,обученной на датасете с добавлением изображений с автопогрузчиком**"""

# Укажите путь к архиву .zip на Google Диске
zip_path = '/content/drive/MyDrive/weights_0809.zip'

# Укажите путь для распаковки архива
extract_path = '/content'

# Распаковка архива
unzip(zip_path, extract_path)

!pip install ultralytics

import cv2
from ultralytics import YOLO
from google.colab.patches import cv2_imshow

# Загрузка модели YOLOv8
model = YOLO('/content/weights_0809/best.pt')
# Открытие видеофайла
video_capture = cv2.VideoCapture("/content/drive/MyDrive/WhatsApp Video 2024-06-15 at 08.54.44.mp4")
# Получение информации о видео

fps = video_capture.get(cv2.CAP_PROP_FPS)

print(fps)

# Создание видео-файла для записи
output_video = cv2.VideoWriter('/content/drive/MyDrive/video/output_0809.mp4',
                            cv2.VideoWriter_fourcc(*'mp4v'),
                            fps,
                            (640, 640))

while video_capture.isOpened():
    # Чтение кадра из видео
    success, frame = video_capture.read()
    if not success:
        break

    frame = cv2.resize(frame, (640, 640))

    # Детекция объектов
    results = model(frame)

    # Визуализация результатов на кадре
    annotated_frame = results[0].plot()

    #cv2_imshow( annotated_frame )


    # Запись обработанного кадра в выходной видеофайл
    output_video.write(annotated_frame)


# Освободить захват и закрыть окно
video_capture.release()
output_video.release()
cv2.destroyAllWindows()

from moviepy.editor import VideoFileClip

video = VideoFileClip('/content/drive/MyDrive/video/output_0809.mp4')
video.ipython_display(width=500, center=False)

# Загрузка модели YOLOv8
model = YOLO('/content/weights_0809/best.pt')
# Открытие видеофайла
video_capture = cv2.VideoCapture("/content/drive/MyDrive/WhatsApp Video 2024-06-15 at 08.54.44.mp4")
# Получение информации о видео

fps = video_capture.get(cv2.CAP_PROP_FPS)



# Создание видео-файла для записи
output_video = cv2.VideoWriter('/content/drive/MyDrive/video/output_track_0809.mp4',
                            cv2.VideoWriter_fourcc(*'mp4v'),
                            fps,
                            (640, 640))

while video_capture.isOpened():
    # Чтение кадра из видео
    success, frame = video_capture.read()
    if not success:
        break

    frame = cv2.resize(frame, (640, 640))

    # Run YOLOv8 tracking on the frame, persisting tracks between frames
    results = model.track(frame, persist=True)

    # Визуализация результатов на кадре
    annotated_frame = results[0].plot()

    #cv2_imshow( annotated_frame )

    #Запись обработанного кадра в выходной видеофайл
    output_video.write(annotated_frame)


# Освободить захват и закрыть окно
video_capture.release()
output_video.release()
cv2.destroyAllWindows()

from moviepy.editor import VideoFileClip

video = VideoFileClip('/content/drive/MyDrive/video/output_track_0809.mp4')
video.ipython_display(width=500, center=False)